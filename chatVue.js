<?xml version="1.0"?>
<!DOCTYPE items [
<!ELEMENT items (item*)>
<!ATTLIST items burpVersion CDATA "">
<!ATTLIST items exportTime CDATA "">
<!ELEMENT item (time, url, host, port, protocol, method, path, extension, request, status, responselength, mimetype, response, comment)>
<!ELEMENT time (#PCDATA)>
<!ELEMENT url (#PCDATA)>
<!ELEMENT host (#PCDATA)>
<!ATTLIST host ip CDATA "">
<!ELEMENT port (#PCDATA)>
<!ELEMENT protocol (#PCDATA)>
<!ELEMENT method (#PCDATA)>
<!ELEMENT path (#PCDATA)>
<!ELEMENT extension (#PCDATA)>
<!ELEMENT request (#PCDATA)>
<!ATTLIST request base64 (true|false) "false">
<!ELEMENT status (#PCDATA)>
<!ELEMENT responselength (#PCDATA)>
<!ELEMENT mimetype (#PCDATA)>
<!ELEMENT response (#PCDATA)>
<!ATTLIST response base64 (true|false) "false">
<!ELEMENT comment (#PCDATA)>
]>
<items burpVersion="2024.2.1.2" exportTime="Mon May 27 11:03:37 CST 2024">
  <item>
    <time>Mon May 27 09:37:51 CST 2024</time>
    <url><![CDATA[https://ai.189.cn/servlet/js/chatVue.js?timestamp=1716773871795]]></url>
    <host ip="223.255.252.155">ai.189.cn</host>
    <port>443</port>
    <protocol>https</protocol>
    <method><![CDATA[GET]]></method>
    <path><![CDATA[/servlet/js/chatVue.js?timestamp=1716773871795]]></path>
    <extension>js</extension>
    <request base64="true"><![CDATA[R0VUIC9zZXJ2bGV0L2pzL2NoYXRWdWUuanM/dGltZXN0YW1wPTE3MTY3NzM4NzE3OTUgSFRUUC8xLjANCkhvc3Q6IGFpLjE4OS5jbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjAuMCBTYWZhcmkvNTM3LjM2IE1pY3JvTWVzc2VuZ2VyLzcuMC4yMC4xNzgxKDB4NjcwMDE0M0IpIE5ldFR5cGUvV0lGSSBNaW5pUHJvZ3JhbUVudi9XaW5kb3dzIFdpbmRvd3NXZWNoYXQvV01QRiBXaW5kb3dzV2VjaGF0KDB4NjMwOTBhMTMpIFhXRUIvOTEyOQ0KQWNjZXB0OiAqLyoNClNlYy1GZXRjaC1TaXRlOiBzYW1lLW9yaWdpbg0KU2VjLUZldGNoLU1vZGU6IG5vLWNvcnMNClNlYy1GZXRjaC1EZXN0OiBzY3JpcHQNClJlZmVyZXI6IGh0dHBzOi8vYWkuMTg5LmNuL3NlcnZsZXQvY2hhdF90d28uaHRtbD9wYXJhbXM9eyUyMnByb3ZpbmNlJTIyOiUyMiVFOSU5RCU5MiVFNiVCNSVCNyUyMiwlMjJidXNpbmVzcyUyMjolMjJUZWxlY29tUm9ib3QlMjIsJTIyY2l0eSUyMjolMjIlRTglQTUlQkYlRTUlQUUlODElMjIsJTIybW9iaWxlJTIyOiUyMmFEV1BBWFlveVpUdEZ6cm1xSUZfel9ITnp3Zl9aX2hmX1pfaCUyMiwlMjJwaWQlMjI6JTIyJTIyLCUyMmFwcGx5Q29kZSUyMjolMjIwMjIyNzEwMTklMjIsJTIycHRva2VuJTIyOiUyMjJmMTQxMTFlOWU2NzkwZjFjMGY4ZWE2ZWZmODZmODUwNGVjMGZjMGY4NWJmZDUwMzdlOTYzYTI4NGQ0YjNjOTJ+JTIyLCUyMnR5cGUlMjI6JTIyJTIyLCUyMnF1ZXN0JTIyOiUyMiUyMn0NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdC1MYW5ndWFnZTogemgtQ04semg7cT0wLjkNCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    <status>200</status>
    <responselength>146521</responselength>
    <mimetype>script</mimetype>
    <response base64="true"><![CDATA[]]></response>
    <comment></comment>
  </item>
</items>
